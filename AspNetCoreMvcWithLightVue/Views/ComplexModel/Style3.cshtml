@using KueiExtensions.System.Text.Json
@model AspNetCoreMvcWithLightVue.Controllers.ComplexViewModel

<h4>ComplexViewModel 輕前端 Vue 版</h4>
<hr />
<div id="app"
     v-cloak>
    <form autocomplete="off"
          v-on:submit.prevent="SubmitForm">
        <div>
            <table class="table">
                <thead>
                <tr>
                    <th>Category</th>
                    <th>Name</th>
                    <th>Value</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                <template v-for="(category, categoryIndex) in vm.Categories"
                          :key="categoryIndex">

                    <tr v-for="(item, itemIndex) in category.Items"
                        :key="itemIndex">
                        <td v-if="itemIndex == 0"
                            class="align-middle"
                            rowspan="3">
                            <input class="form-control"
                                   v-model="category.Name" />
                        </td>

                        <td>
                            <input class="form-control"
                                   v-model="item.Name" />
                        </td>
                        <td>
                            <input class="form-control"
                                   v-model="item.Value" />
                        </td>

                        <td v-if="itemIndex == 0"
                            class="align-middle"
                            rowspan="3">
                            <input type="button"
                                   class="btn btn-danger"
                                   value="刪除"
                                   v-on:click="DeleteItem(categoryIndex)" />
                        </td>
                    </tr>
                </template>
                </tbody>
            </table>
            <input type="button"
                   value="新增"
                   class="btn btn-primary mb-1"
                   v-on:click="AddNewCategory()" />
        </div>
        <div class="form-group">
            <input type="submit"
                   value="儲存"
                   class="btn btn-primary" />
        </div>
    </form>
</div>
<fieldset >
    <legend>說明：</legend>
    <div>
        <ol style="list-style: decimal inside;">
            跟前一版相比，少了以下的處理：
            <li>Partial View</li>
            <li>新增時，透過 ajax 來呼叫 Partial View 來產生 Html，再將 Html 放至指定的地方</li>
            <li>submit form 時，要做 reIndex 的處理，避免 Index 不連續而導致後端收到不完整的資料 !</li>
        </ol>
    </div>
</fieldset>

<a href='@Url.Action("Index")'>回上一頁</a>

@section Scripts
{
    <script src="https://unpkg.com/vue@next"></script>

    <script>
      const { createApp, reactive } = Vue;

      const app = createApp({

          setup() {
              const vm = reactive( @Html.Raw(Model?.ToJson()) );
              const submitUrl = '@Url.Action("PostStyle3")';
              const redirectUrl = '@Url.Action("ShowStyle3")';
              const emptyCategory = @Html.Raw(ViewBag.EmptyCategoryJson);

              function AddNewCategory() {
                  vm.Categories.push(JSON.parse(JSON.stringify(emptyCategory)));
              }

              function DeleteItem(categoryIndex) {
                  vm.Categories.splice(categoryIndex, 1);
              }

              function SubmitForm () {
                  console.log("SubmitForm");

                  $.ajax({
                              url: submitUrl,
                              type: 'post',
                              data: JSON.stringify( vm ),
                              dataType: 'json',
                              contentType: 'application/json',
                         })
                     .done((e) => { window.location.href = redirectUrl })
                     .fail((res) => { console.log('error', res); })
              }

              return {
                vm,
                AddNewCategory,
                DeleteItem,
                SubmitForm,
              };
          },
      });

      const vm = app.mount("#app");
    </script>
}
