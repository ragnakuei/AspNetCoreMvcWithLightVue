@model AspNetCoreMvcWithLightVue.Controllers.ComplexViewModel

<h4>ComplexViewModel FormData 版</h4>
<div>
    <form asp-action="ShowStyle1"
          autocomplete="off"
          method="post">
        <div>
            <table class="table">
                <thead>
                <tr>
                    <th>Category</th>
                    <th>Name</th>
                    <th>Value</th>
                    <th></th>
                </tr>
                </thead>
                <tbody id="categories">
                @for (int i = 0; i < Model.Categories.Length; i++)
                {
                    ViewBag.CategoryIndex = (int?)i;

                    <partial name="CategoryView" />
                }
                </tbody>
            </table>
            <input type="button"
                   value="新增"
                   class="btn btn-primary mb-1"
                   onclick="AddNewCategory()" />
        </div>
        <div class="form-group">
            <input type="submit"
                   value="儲存"
                   class="btn btn-primary" />
        </div>
    </form>
</div>
<fieldset >
    <legend>說明：</legend>

    <ol style="list-style: decimal inside;">
        延續上次提過的：針對動態的項目，抽取成 partial view，會在二個時機點被取用
        <li>進入頁面時，以 razor 語法呼叫</li>
        <li>動態新增項目時，透過 ajax 取回 html 後，再放至指定的地方</li>
    </ol>

    <ol style="list-style: decimal inside;">
        接下來經過以下的操作：
        <li>新增一筆，並輸入資料</li>
        <li>再刪除中間那筆</li>
        <li>按下儲存</li>
    </ol>

    就會發現最後一筆不見了 ! <br>
    這是一開始寫 Asp.Net MVC 最常碰到的問題 ! <br>
    <br>
    後端抓不到資料的原因是：因為 Model Binding 預設只能處理連續 index 的資料 ! <br>
    下一篇用修改 index 的方式來讓  <br>

</fieldset>

<a href='@Url.Action("Index")'>回上一頁</a>

@section Scripts
{
    <script>
        window.categoryIndex = @Model.Categories.Length;

        function AddNewCategory()
        {
            $.ajax({
                        url: '@Url.Action("NewCategoryAndThreeItems")',
                        type: 'post',
                        data: { categoryIndex } ,
                    })
             .done(function(e) {

                        $('#categories').append(e);

                        window.categoryIndex++;
                    })
             .fail(function(res) {
                        console.log('error', res);
                    });
        }

        function DeleteTable(e)
        {
            const tr = $(e.target).parent().parent();

            tr.next().remove();
            tr.next().remove();
            tr.remove();
        }
    </script>
}
