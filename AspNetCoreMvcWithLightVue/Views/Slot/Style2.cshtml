<div id="app"
     class="text-center"
     style="display: none">
    <button class="btn btn-dark" @@click="showDialogA" >Toggle Dialog A</button>&nbsp
    <button class="btn btn-dark" @@click="showDialogB" >Toggle Dialog B</button><br>
    <jquery-ui-dialog v-model:is_show_dialog="isShowDialogA"
                      v-on:close_dialog="CloseDialogA">
        A
    </jquery-ui-dialog>
    <jquery-ui-dialog v-model:is_show_dialog="isShowDialogB"
                      v-on:close_dialog="CloseDialogB">
        B
    </jquery-ui-dialog>
</div>

@section Scripts
{
    <link rel="stylesheet"
          href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script src="https://unpkg.com/vue@next"></script>

    <script>
      const { createApp, computed, onMounted, ref, watch } = Vue;

      const app = createApp({
        setup() {
            const isShowDialogA = ref(false);
            const isShowDialogB = ref(false);

            const showDialogA = function () {
                isShowDialogA.value = true;
            };

            const showDialogB = function () {
                isShowDialogB.value = true;
            };

            const CloseDialogA = function () {
                isShowDialogA.value = false;

                console.log('dialogA is closed');
            };

            const CloseDialogB = function () {
                isShowDialogB.value = false;

                console.log('dialogB is closed');
            };

            return {
                isShowDialogA,
                isShowDialogB,
                showDialogA,
                showDialogB,
                CloseDialogA,
                CloseDialogB,
            }
        }
      });

      app.component("jquery-ui-dialog", {
          props: {
            is_show_dialog: null,
          },
          setup(props, { emit }) {

            const dialogDom = ref(null);

            watch(()=> props.is_show_dialog,
                  (newValue, oldValue) => {
                      if (newValue === true) {
                          dialogDom.value.dialog("open");
                      }
                  });

            onMounted(() => {
                dialogDom.value = $('#dialog').dialog({
                                                      autoOpen: false,
                                                      width: 'auto',
                                                      modal: true,
                                                      close: function (event, ui ) {
                                                          emit('close_dialog');
                                                      }
                                                    });
            });

            return {
            };
          },
        template: `
<div id="dialog">
  <slot></slot>
</div>
`,
      });

      const vm = app.mount('#app');
      document.getElementById("app").style.display = "block";
    </script>
}
