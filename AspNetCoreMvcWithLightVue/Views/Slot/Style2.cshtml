<div id="app"
     class="text-center"
     style="display: none">
    <button class="btn btn-dark" @@click="toggleDialogA" >Toggle Dialog A</button>&nbsp
    <button class="btn btn-dark" @@click="toggleDialogB" >Toggle Dialog B</button>
    <jquery-ui-dialog v-model:hidden="isHiddenDialogA">A</jquery-ui-dialog>
    <jquery-ui-dialog v-model:hidden="isHiddenDialogB">B</jquery-ui-dialog>
</div>

@section Scripts
{
    <link rel="stylesheet"
          href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script src="https://unpkg.com/vue@next"></script>

    <script>
      const { createApp, computed, onMounted, ref } = Vue;

      const app = createApp({
        setup() {
            const isHiddenDialogA = ref(true);
            const isHiddenDialogB = ref(true);

            const toggleDialogA = function (){
                console.log('isHiddenDialogA', isHiddenDialogA.value);
                isHiddenDialogA.value = !isHiddenDialogA.value;
            }
            const toggleDialogB = function (){
                console.log('isHiddenDialogB', isHiddenDialogB.value);
                isHiddenDialogB.value = !isHiddenDialogB.value;
            }

            return {
                isHiddenDialogA,
                isHiddenDialogB,
                toggleDialogA,
                toggleDialogB,
            }
        }
      });

      app.component("jquery-ui-dialog", {
          props: {
              isHidden: Boolean,
          },
          setup(props) {
            const dialogDom = ref(null);

            const hidden = computed({
                    get : () => props.isHidden,
                    set : (v) => {
                        console.log('jquery-ui-dialog computed hidden', v)
                        if (v)
                        {
                            dialogDom.value.dialog("close");
                        }
                        else
                        {
                            dialogDom.value.dialog("open");
                        }
                        props.isHidden = v;
                    },
                });

            onMounted(() => {
                dialogDom.value = $('#dialog').dialog({
                                                         autoOpen: false,
                                                         width: 'auto',
                                                         modal: true,
                                                         close: function (event, ui )
                                                         {

                                                         }
                                                       });
            });

            return {
                dialogDom,
                hidden,
            };
          },
        template: `
<div id="dialog">
  <slot></slot>
</div>`,
      });

      const vm = app.mount('#app');
      document.getElementById("app").style.display = "block";
    </script>
}
